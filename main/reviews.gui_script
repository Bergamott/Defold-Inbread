local button_pressed = false

function init(self)
    msg.post("reviews#gui","disable")
end

local function activate(self, completed)
	msg.post(".", "acquire_input_focus")
	msg.post("reviews#gui","enable")
	gui.set_position(gui.get_node("manholder"), vmath.vector3(-116,-200,0))
	score_string = settings_table["scores"]
	for i=1,3 do
		local clipping = gui.get_node("clipping" .. i)
		if string.byte(score_string,i*12) > 48 then
			gui.set_color(clipping, vmath.vector4(1, 1, 1, 1))
		else
			gui.set_color(clipping, vmath.vector4(1, 1, 1, 0.3))
		end
	end
	local current_clipping = gui.get_node("clipping" .. math.floor(completed/12))
	local to_scale = gui.get_scale(current_clipping)
	to_scale.x = to_scale.x*1.3
	to_scale.y = to_scale.y*1.3
	gui.animate(current_clipping, gui.PROP_SCALE, to_scale, gui.EASING_LINEAR, 0.5, 0, nil, gui.PLAYBACK_ONCE_PINGPONG)
	gui.animate(gui.get_node("manholder"),gui.PROP_POSITION,
		vmath.vector3(-116,-45,0), gui.EASING_OUTQUAD, 0.8)
	if settings_table["sound_on"] then
		msg.post("/reviews#fanfare", "play_sound")
	end
end

local function deactivate(self)
	msg.post(".", "release_input_focus")
	msg.post("reviews#gui","disable")
end


function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

function update(self, dt)
    -- Add update code here
    -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    if message_id == hash("activate") then
    	activate(self, message.completed)
    elseif message_id == hash("deactivate") then
    	deactivate(self)
    end
end

function on_input(self, action_id, action)
    if action_id == hash("mouse") then
    	if action.pressed or action.released then
			local bg_pos = gui.get_position(gui.get_node("background"))
    		local bg_scale = gui.get_scale(gui.get_node("background"))
    		local button = gui.get_node("done_button")
    		local but_pos = gui.get_position(button)
    		local but_size = gui.get_size(button)
    		
    		local dx = action.x - (bg_pos.x + but_pos.x*bg_scale.x)
    		local dy = action.y - (bg_pos.y + but_pos.y*bg_scale.x)
    		if dx < but_size.x*0.5*bg_scale.x and dx > -but_size.x*0.5*bg_scale.x and
    			dy < but_size.y*0.5*bg_scale.y and dy > -but_size.y*0.5*bg_scale.y then
    			if action.pressed then
    				button_pressed = true
    				gui.play_flipbook(button, "play_pressed")
    			elseif action.released then
    				if settings_table["sound_on"] then
						msg.post("main_menu#click", "play_sound")
					end
    				msg.post("controller#script", "continue_from_reviews")
    			end
    		end
    		if action.released then
    			if button_pressed then
    				gui.play_flipbook(button, "play_released")
    			end
    			button_pressed = false
    		end
    	end
    end
end

function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
