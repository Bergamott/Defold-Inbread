go.property("type", 1)
go.property("speed", 30)

local crumb_colors = {vmath.vector4(0.96, 0.91, 0.54, 1),
	 vmath.vector4(1.0, 0.46, 0.54, 1),
	 vmath.vector4(0.42, 1.0, 0.31, 1),
	 vmath.vector4(0.96, 0.91, 0.54, 1),
	 vmath.vector4(0.83, 0.60, 0.49, 1),
	 vmath.vector4(0.93, 0.78, 0.62, 1),
	 vmath.vector4(0.62, 0.27, 0.29, 1),
	 vmath.vector4(0.93, 0.79, 0.64, 1),
	 vmath.vector4(1.0, 0.45, 0.12, 1),
	 vmath.vector4(1.0, 0.67, 0.61, 1)}

local sprite_size
local tap_timer
local ingredient_state

local frames = {hash("loaf@2x"), hash("ham@2x"), hash("lettuce@2x"),
	hash("cheese@2x"), hash("brownloaf@2x"), hash("chicken@2x"),
	hash("roast@2x"), hash("whiteloaf@2x"),
	hash("sausage@2x"), hash("porkbelly@2x")}

local frame_heights = {114,114,134,114,114,116,114,112,114,104}
local frame_widths = {164,162,138,152,168,172,146,166,148,172}

function init(self)
	self.ingredient_state = 1
	msg.post("#sprite", "play_animation", {id = frames[self.type]})
	-- Adjust y position for sprite height
	local scale = go.get_scale_vector()
    local pos = go.get_position()
    self.sprite_size = go.get("#sprite","size")
    self.sprite_size.x = frame_widths[self.type]
    self.sprite_size.y = frame_heights[self.type] * scale.y / scale.x
    pos.y = pos.y + self.sprite_size.y * 0.25 - 1
    go.set_position(pos)
    msg.post(".", "acquire_input_focus")
    self.tap_timer = 0
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

local function remove_me(self)
	msg.post(".", "release_input_focus")
	msg.post("game#script", "remove_ingredient", {ingredient = go.get_id()})
end

function update(self, dt)
	if self.ingredient_state == 1 then
    	local pos = go.get_position()
    	pos.x = pos.x + dt*self.speed
    	if self.tap_timer > 0 then
    		self.tap_timer = self.tap_timer - dt
    	end
    	if (self.speed < 0 and pos.x < -80) or
    		(self.speed > 0 and pos.x > 720) then
    		remove_me(self)
    	else
    		go.set_position(pos)
    	end
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("halt") then
    	self.ingredient_state = 2
    end
end

function on_input(self, action_id, action)
	if action.pressed and action_id == hash("mouse") and self.ingredient_state == 1 then
		local pos = go.get_position()
		local dx = pos.x*0.5 - action.x
		local dy = pos.y*0.5 - action.y
		local upscale = go.get_scale_vector()
		upscale.x = upscale.x * 1.2
		upscale.y = upscale.y * 1.2
		if self.tap_timer <= 0 and
			dx < self.sprite_size.x*0.25 and dx > -self.sprite_size.x*0.25 and
			dy < self.sprite_size.y*0.25 and dy > -self.sprite_size.y*0.25 then
			local crumbs = factory.create("#crumbs_factory",go.get_world_position(), nil, {color = crumb_colors[self.type]}, self.scale_vec)
			go.animate("#sprite", "scale.x", go.PLAYBACK_ONCE_PINGPONG, 1.2, go.EASING_OUTQUAD, 0.2)
			go.animate("#sprite", "scale.y", go.PLAYBACK_ONCE_PINGPONG, 1.2, go.EASING_OUTQUAD, 0.2)
			self.tap_timer = 0.45
			msg.post("game#script","create_slice",{pos = go.get_world_position(), type = self.type})
		end
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
