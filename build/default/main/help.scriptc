
۲
Ĳlocal scene
local step_number

local crumb_colors = {vmath.vector4(0.96, 0.91, 0.54, 1),
	 vmath.vector4(1.0, 0.46, 0.54, 1),
	 vmath.vector4(0.42, 1.0, 0.31, 1),
	 vmath.vector4(0.96, 0.91, 0.54, 1),
	 vmath.vector4(0.83, 0.60, 0.49, 1),
	 vmath.vector4(0.93, 0.78, 0.62, 1),
	 vmath.vector4(0.62, 0.27, 0.29, 1),
	 vmath.vector4(0.93, 0.79, 0.64, 1),
	 vmath.vector4(1.0, 0.45, 0.12, 1),
	 vmath.vector4(1.0, 0.67, 0.61, 1)}
	 
local help_scenes = {"help1", "help2", "help3", "help4", "help5", "help6", "help7"}
	 
local fall_easing = {-0.1,0,0.1,0.25,0.45,0.70,1.0,0.9,1.0}
local fall_easing_vec

local function end_help(self)
	msg.post("controller#script", "show_game_from_help")
end

local next_animation_step

local function animate_scene_1(self)
		if self.step_number == 1 then
			go.animate("bubble1#slice", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0)
			go.animate("bubble1#bubble", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0, next_animation_step)
		elseif self.step_number == 2 then
			go.set_position(vmath.vector3(526,782,0.21), "hand1")
			go.animate("hand1#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
			go.animate("hand1", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(404,738,0.21), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
		elseif self.step_number == 3 then
			local crumbs = factory.create("#crumbs_factory",vmath.vector3(160,363,0.22), nil, {color = crumb_colors[1]}, nil)
			go.set_position(vmath.vector3(320,726,0.22), go.get_id("slice1_1"))
			go.animate("hand1#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
			go.animate("hand1","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(526,782,0.21), go.EASING_LINEAR, 0.5)
			go.animate("slice1_1","position.y",go.PLAYBACK_ONCE_FORWARD,534,
				fall_easing_vec,0.6,0, next_animation_step)
    		if settings_table["sound_on"] then
				msg.post("/game#chop", "play_sound")
			end
		elseif self.step_number == 4 then
    		if settings_table["sound_on"] then
				msg.post("/game#land", "play_sound")
			end
			go.set_position(vmath.vector3(526,590,0.23), "hand1")
			go.animate("hand1#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
			go.animate("hand1", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(404,546,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
		elseif self.step_number == 5 then
			go.animate("hand1#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
			go.animate("hand1","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(526,590,0.21), go.EASING_LINEAR, 0.5)
			go.animate("slice1_1","position.y",go.PLAYBACK_ONCE_FORWARD,390,
				fall_easing_vec,0.6,0, next_animation_step)
    		if settings_table["sound_on"] then
				msg.post("/game#knock", "play_sound")
			end
		elseif self.step_number == 6 then
    		if settings_table["sound_on"] then
				msg.post("/game#land", "play_sound")
			end
			go.animate("head1_2#head", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8)
			go.animate("head1_2#mouth", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8, 0, next_animation_step)
		elseif self.step_number == 7 then
    		if settings_table["sound_on"] then
				msg.post("/game#score", "play_sound")
			end
			go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 1.0, 0, end_help)
		end
end

local function animate_scene_2(self)
		if self.step_number == 1 then
			go.animate("bubble2#slice", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0)
			go.animate("bubble2#cheese", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0)
			go.animate("bubble2#bubble", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0, next_animation_step)
		elseif self.step_number == 2 then
			go.set_position(vmath.vector3(526,757,0.23), "hand2")
			go.animate("hand2#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
			go.animate("hand2", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(404,713,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
		elseif self.step_number == 3 then
			go.animate("hand2#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
			go.animate("hand2","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(526,757,0.23), go.EASING_LINEAR, 0.5)
			go.animate("slice2_1","position.y",go.PLAYBACK_ONCE_FORWARD,557,
				fall_easing_vec,0.6,0, next_animation_step)
    		if settings_table["sound_on"] then
				msg.post("/game#knock", "play_sound")
			end
		elseif self.step_number == 4 then
    		if settings_table["sound_on"] then
				msg.post("/game#land", "play_sound")
			end
			go.set_position(vmath.vector3(526,600,0.23), "hand2")
			go.animate("hand2#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
			go.animate("hand2", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(404,556,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
		elseif self.step_number == 5 then
			go.animate("hand2#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
			go.animate("hand2","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(526,600,0.21), go.EASING_LINEAR, 0.5)
			go.animate("slice2_1","position.y",go.PLAYBACK_ONCE_FORWARD,414,
				fall_easing_vec,0.6)
			go.animate("slice2_2","position.y",go.PLAYBACK_ONCE_FORWARD,390,
				fall_easing_vec,0.6,0, next_animation_step)
    		if settings_table["sound_on"] then
				msg.post("/game#knock", "play_sound")
			end
		elseif self.step_number == 6 then
    		if settings_table["sound_on"] then
				msg.post("/game#land", "play_sound")
			end
			go.animate("head2_2#head", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8)
			go.animate("head2_2#mouth", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8, 0, next_animation_step)
		elseif self.step_number == 7 then
    		if settings_table["sound_on"] then
				msg.post("/game#score", "play_sound")
			end
			go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 1.0, 0, end_help)
		end
end

local function animate_scene_3(self)
	if self.step_number == 1 then
		go.animate("bubble3#slice", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0)
		go.animate("bubble3#cheese", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0)
		go.animate("bubble3#leaves", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0)
		go.animate("bubble3#bubble", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 1.0, next_animation_step)
	elseif self.step_number == 2 then
		for i=1,3 do
			local slice_name = "slice3_" .. i
			local sprite_name = slice_name .. "#sprite"
			go.animate(sprite_name, "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.2,0.5*i)
			go.animate(slice_name,"position.y",go.PLAYBACK_ONCE_FORWARD,398+i*24,
				fall_easing_vec,0.5,0.5*i)
			go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 2.5, 0, next_animation_step)
		end
	elseif self.step_number == 3 then
		local starburst = factory.create("game#starburst_factory",go.get_world_position("slice3_2"), nil, {magnitude = 1}, nil)
		if settings_table["sound_on"] then
			msg.post("/game#score", "play_sound")
		end
		for i=1,3 do
			local slice_name = "slice3_" .. (i+3)
			local sprite_name = slice_name .. "#sprite"
			go.animate(sprite_name, "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.2,1+0.5*i)
			go.animate(slice_name,"position.y",go.PLAYBACK_ONCE_FORWARD,398+i*24,
				fall_easing_vec,0.5,1+0.5*i)
			go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 3.5, 0, next_animation_step)
		end
	elseif self.step_number == 4 then
		local starburst = factory.create("game#starburst_factory",go.get_world_position("slice3_5"), nil, {magnitude = 2}, nil)
		if settings_table["sound_on"] then
			msg.post("/game#score", "play_sound")
		end
		for i=1,3 do
			local slice_name = "slice3_" .. (i+6)
			local sprite_name = slice_name .. "#sprite"
			go.animate(sprite_name, "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.2,1+0.5*i)
			go.animate(slice_name,"position.y",go.PLAYBACK_ONCE_FORWARD,398+i*24,
				fall_easing_vec,0.5,1+0.5*i)
			go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 3.5, 0, next_animation_step)
		end
	elseif self.step_number == 5 then
		local starburst = factory.create("game#starburst_factory",go.get_world_position("slice3_8"), nil, {magnitude = 3}, nil)
		if settings_table["sound_on"] then
			msg.post("/game#score", "play_sound")
		end
		go.animate("head3_2#head", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8, 1.5)
		go.animate("head3_2#mouth", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8, 1.5, next_animation_step)
	elseif self.step_number == 6 then
		go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 1.0, 0, end_help)
	end
end

local function animate_scene_4(self)
	if self.step_number == 1 then
		go.set_position(vmath.vector3(546,795,0.23), "hand4")
		go.animate("hand4#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
		go.animate("hand4", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(424,751,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
		go.animate("tomato4", "position.y", go.PLAYBACK_LOOP_PINGPONG, 556,go.EASING_OUTQUAD, 0.5)
		go.animate("tomato4", "position.x", go.PLAYBACK_ONCE_FORWARD, 340, go.EASING_LINEAR, 2.4, 0)
	elseif self.step_number == 2 then
		go.animate("hand4#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
		go.animate("hand4","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(546,795,0.23), go.EASING_LINEAR, 0.5)
		go.animate("slice4_1","position.y",go.PLAYBACK_ONCE_FORWARD,493,
			fall_easing_vec,0.8,0, next_animation_step)
    	if settings_table["sound_on"] then
			msg.post("/game#knock", "play_sound")
		end
	elseif self.step_number == 3 then
    	if settings_table["sound_on"] then
			msg.post("/game#splat", "play_sound")
		end
		local crumbs = factory.create("#crumbs_factory",go.get_world_position("tomato4"), nil, {color = vmath.vector4(0.93, 0.20, 0.14, 1)}, scale_vec)
		go.set("tomato4#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set("plus4#sprite", "tint", vmath.vector4(1,1,1,1))
		go.cancel_animations("tomato4", "position.y")
		go.set_rotation(vmath.quat_rotation_z(0.15), "plus4")
		go.animate("plus4", "rotation", go.PLAYBACK_LOOP_PINGPONG, vmath.quat_rotation_z(-0.15),
			go.EASING_INOUTQUAD, 0.6)
		go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 2.5, 0, next_animation_step)
	elseif self.step_number == 4 then
		go.cancel_animations("plus4", "rotation")
		end_help(self)		
	end
end

local function animate_scene_5(self)
	if self.step_number == 1 then
		go.animate("fly5","position.x", go.PLAYBACK_LOOP_PINGPONG, 340, go.EASING_INOUTQUAD, 0.5)
		go.animate("fly5", "position.y", go.PLAYBACK_ONCE_FORWARD, 770, go.EASING_LINEAR, 1.6)
		go.set_position(vmath.vector3(546,761,0.23), "hand5")
		go.animate("hand5#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
		go.animate("hand5", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(424,717,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
	elseif self.step_number == 2 then
		go.animate("fly5", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(160,1180,0.5), go.EASING_INQUAD, 1.6, 0, next_animation_step)
		go.animate("hand5#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
		go.animate("hand5","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(546,761,0.23), go.EASING_LINEAR, 0.5)
		go.animate("slice5_1","position.y",go.PLAYBACK_ONCE_FORWARD,526,
			fall_easing_vec,0.8,0, next_animation_step)
    	if settings_table["sound_on"] then
			msg.post("/game#knock", "play_sound")
		end
	elseif self.step_number == 3 then
		if settings_table["sound_on"] then
			msg.post("/game#land", "play_sound")
		end
	elseif self.step_number == 4 then
		go.set_position(vmath.vector3(300,1176,0.2), go.get_id("fly5"))
		go.animate("fly5","position.x", go.PLAYBACK_LOOP_PINGPONG, 340, go.EASING_INOUTQUAD, 0.5)
		go.animate("fly5", "position.y", go.PLAYBACK_ONCE_FORWARD, 700, go.EASING_LINEAR, 1.6)
		go.set_position(vmath.vector3(506,761,0.23), "hand5")
		go.animate("hand5#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
		go.animate("hand5", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(384,717,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
	elseif self.step_number == 5 then
		if settings_table["sound_on"] then
			msg.post("/game#swat", "play_sound")
		end
		go.set_position(vmath.vector3(300,1176,0.2), go.get_id("fly5"))
		local crumbs = factory.create("#crumbs_factory",vmath.vector3(160,360,0.2), nil, {color = vmath.vector4(0.61, 0.02, 0.12, 1)}, scale_vec)
		go.animate("hand5#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
		go.animate("hand5","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(506,761,0.23), go.EASING_LINEAR, 0.5, 0, next_animation_step)
	elseif self.step_number == 6 then
		msg.post("fly5#sprite", "animation_done", {current_tile=1, id = hash("fly")})
		go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 1.0, 0, end_help)
	end
end

local function animate_scene_6(self)
	if self.step_number == 1 then
		go.set_position(vmath.vector3(546,761,0.23), "hand6")
		go.animate("hand6#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
		go.animate("hand6", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(424,717,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
	elseif self.step_number == 2 then
		go.animate("hand6#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
		go.animate("hand6","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(546,761,0.23), go.EASING_LINEAR, 0.5)
		go.animate("slice6_1","position.y",go.PLAYBACK_ONCE_FORWARD,504,
			fall_easing_vec,0.8,0, next_animation_step)
    	if settings_table["sound_on"] then
			msg.post("/game#knock", "play_sound")
		end
	elseif self.step_number == 3 then
		local crumbs = factory.create("#crumbs_factory",vmath.vector3(160,263,0.2), nil, {color = vmath.vector4(0.3, 0.3, 0.3, 1)}, scale_vec)
		if settings_table["sound_on"] then
			msg.post("/game#splat", "play_sound")
		end
		go.animate("cross6#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.5, 2.0, next_animation_step)
	elseif self.step_number == 4 then
		go.animate("head6_2#head", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8)
		go.animate("head6_2#mouth", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.8, 0, next_animation_step)
	elseif self.step_number == 5 then
		go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 1.5, 0, end_help)
	end
end

local function animate_scene_7(self)
	if self.step_number == 1 then
		go.set_position(vmath.vector3(546,781,0.23), "hand7")
		go.animate("hand7#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3, 1.0)
		go.animate("hand7", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(424,737,0.23), go.EASING_LINEAR, 0.6, 1.0, next_animation_step)
	elseif self.step_number == 2 then
		go.animate("hand7#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
		go.animate("hand7","position",go.PLAYBACK_ONCE_FORWARD, vmath.vector3(546,781,0.23), go.EASING_LINEAR, 0.5)
		msg.post("bottle7#sprite", "play_animation", {id = hash("ketchup_down")})
		go.animate("bottle7", "position.y", go.PLAYBACK_ONCE_FORWARD, 738, go.EASING_LINEAR, 0.4, 0, next_animation_step)
    	if settings_table["sound_on"] then
			msg.post("/game#ketchup", "play_sound")
		end
	elseif self.step_number == 3 then
		msg.post("bottle7#sprite", "play_animation", {id = hash("ketchup_up")})
		go.animate("bottle7", "position.y", go.PLAYBACK_ONCE_FORWARD, 737, go.EASING_LINEAR, 0.4)	
		go.set("drop7#sprite", "tint", vmath.vector4(1,1,1,1))
		go.set_position(vmath.vector3(320,701,0.3), go.get_id("drop7"))
		go.animate("drop7", "position.y", go.PLAYBACK_ONCE_FORWARD, 480, go.EASING_INQUAD, 0.5, 0, next_animation_step)
	elseif self.step_number == 4 then
		if settings_table["sound_on"] then
			msg.post("/game#splat", "play_sound")
		end
		go.set("drop7#sprite", "tint", vmath.vector4(1,1,1,0))
		local crumbs = factory.create("#crumbs_factory",vmath.vector3(160,240,0.3), nil, {color = vmath.vector4(0.61, 0.02, 0.12, 1)}, scale_vec)
		go.set_rotation(vmath.quat_rotation_z(0.15), "plus7")
		go.set("plus7#sprite", "tint", vmath.vector4(1,1,1,1))
		go.animate("plus7", "rotation", go.PLAYBACK_LOOP_PINGPONG, vmath.quat_rotation_z(-0.15),
			go.EASING_INOUTQUAD, 0.6)
		go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 2.5, 0, next_animation_step)
	elseif self.step_number == 5 then
		go.cancel_animations("plus7", "rotation")
		end_help(self)
	end
end

next_animation_step = function(self)
	self.step_number = self.step_number + 1
	if self.scene == 1 then
		animate_scene_1(self)
	elseif self.scene == 2 then
		animate_scene_2(self)
	elseif self.scene == 3 then
		animate_scene_3(self)
	elseif self.scene == 4 then
		animate_scene_4(self)
	elseif self.scene == 5 then
		animate_scene_5(self)
	elseif self.scene == 6 then
		animate_scene_6(self)
	elseif self.scene == 7 then
		animate_scene_7(self)
	end
end

local function setup_scene(self)
	self.step_number = 0
	go.animate("#invisible", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,1), go.EASING_LINEAR, 0.3)
	for i,s in ipairs(help_scenes) do
		if i == self.scene then
			go.set_position(vmath.vector3(0,0,0.2), go.get_id(s))
		else
			go.set_position(vmath.vector3(0,0,-5), go.get_id(s))
		end
	end
	if self.scene == 1 then
		-- Introduction
		go.set_position(vmath.vector3(320,726,-5), go.get_id("slice1_1"))
		go.set("hand1#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set("head1_2#head", "tint", vmath.vector4(1,1,1,0))
		go.set("head1_2#mouth", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble1#bubble", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble1#slice", "tint", vmath.vector4(1,1,1,0))
	elseif self.scene == 2 then
		-- Combining slices
		go.set_position(vmath.vector3(320,691,0.21), go.get_id("slice2_1"))
		go.set_position(vmath.vector3(320,533,0.21), go.get_id("slice2_2"))
		go.set("hand2#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set("head2_2#head", "tint", vmath.vector4(1,1,1,0))
		go.set("head2_2#mouth", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble2#bubble", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble2#slice", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble2#cheese", "tint", vmath.vector4(1,1,1,0))
	elseif self.scene == 3 then
		-- Slice order
		go.set("head3_2#head", "tint", vmath.vector4(1,1,1,0))
		go.set("head3_2#mouth", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble3#bubble", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble3#slice", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble3#cheese", "tint", vmath.vector4(1,1,1,0))
		go.set("bubble3#leaves", "tint", vmath.vector4(1,1,1,0))
		for i=1,3 do
			for j=1,3 do
				local slice_name = "slice3_" .. (j+i*3-3)
				local sprite_name = slice_name .. "#sprite"
				go.set(sprite_name, "tint", vmath.vector4(1,1,1,0))
				go.set_position(vmath.vector3(160*i,680,0.1), slice_name)
			end
		end
	elseif self.scene == 4 then
		-- Condiments
		go.set("hand4#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set("plus4#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set_position(vmath.vector3(340,729,0.21), go.get_id("slice4_1"))
		go.set_position(vmath.vector3(120,516,0.21), go.get_id("tomato4"))
		go.set("tomato4#sprite", "tint", vmath.vector4(1,1,1,1))
	elseif self.scene == 5 then
		-- Fly
		msg.post("fly5#sprite", "play_animation", {id = hash("fly")})
		go.set_position(vmath.vector3(320,691,0.21), go.get_id("slice5_1"))
		go.set_position(vmath.vector3(300,1176,0.5), go.get_id("fly5"))
		go.set("hand5#sprite", "tint", vmath.vector4(1,1,1,0))
	elseif self.scene == 6 then
		-- Goo
		go.set("head6_2#head", "tint", vmath.vector4(1,1,1,0))
		go.set("head6_2#mouth", "tint", vmath.vector4(1,1,1,0))
		go.set("cross6#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set("hand6#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set_position(vmath.vector3(320,691,0.21), go.get_id("slice6_1"))
	elseif self.scene == 7 then
		-- Ketchup
		go.set("drop7#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set("plus7#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set("hand7#sprite", "tint", vmath.vector4(1,1,1,0))
		go.set_position(vmath.vector3(320,691,0.21), go.get_id("slice6_1"))
	end
	next_animation_step(self)
end

local function activate(self)
	msg.post("@render:", "clear_color", { color = vmath.vector4(0, 0, 1, 1) })
	-- Scale and adjust container
	local scale_vec = go.get_scale_vector()
	local y_scale = ratio / 0.5625
	if y_scale > 1.25 then
		y_scale = 1.25
	end
	scale_vec.y = scale_vec.x * y_scale
	go.set_scale(scale_vec)
	go.set_position(vmath.vector3(0,-0.5*568*(y_scale-1),0))
	setup_scene(self)
end

local function deactivate(self)
	go.set_position(vmath.vector3(0,0,-5))
end


function init(self)
    fall_easing_vec = vmath.vector(fall_easing)
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

function update(self, dt)
    -- Add update code here
    -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    if message_id == hash("activate") then
    	self.scene = message.scene
    	activate(self)
    elseif message_id == hash("deactivate") then
    	deactivate(self)
    end
end

function on_input(self, action_id, action)
    -- Add input-handling code here
    -- Remove this function if not needed
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
@main/help.script" 